@use "sass:math";

// Custom Functions
@function calculate-width($columns) {
    @return math.div(100%, $columns);
}

@function calculate-spacing($base-unit, $multiplier) {
    @return $base-unit * $multiplier;
}

// Variables
$base-color: #3498db;
$base-spacing: 1rem;

// Color Functions Example
.color-box {
    padding: 2rem;
    margin: 1rem 0;
    text-align: center;
    color: white;

    &.base {
        background-color: $base-color;
    }

    &.lighter {
        background-color: lighten($base-color, 20%);
    }

    &.darker {
        background-color: darken($base-color, 20%);
    }

    &.complement {
        background-color: complement($base-color);
    }
}

// Grid Functions Example
.grid {
    display: flex;
    gap: 1rem;
    margin: 1rem 0;
}

@for $i from 3 through 5 {
    .col-#{$i} {
        width: calculate-width($i);
        padding: 1rem;
        background-color: lighten($base-color, 10% * ($i - 3));
        text-align: center;
        color: white;
    }
}

// Spacing Functions Example
.spacing-example {
    background-color: $base-color;
    color: white;
    margin: 1rem 0;
    text-align: center;

    &.small {
        padding: calculate-spacing($base-spacing, 1);
    }

    &.medium {
        padding: calculate-spacing($base-spacing, 2);
    }

    &.large {
        padding: calculate-spacing($base-spacing, 3);
    }
}

// Utility Functions
@function strip-unit($value) {
    @return math.div($value, ($value * 0 + 1));
}

@function rem($px) {
    $rem: math.div(strip-unit($px), 16);
    @return #{$rem}rem;
}

// Example usage of utility functions
.container {
    max-width: rem(1200px);
    margin: 0 auto;
    padding: rem(20px);
} 